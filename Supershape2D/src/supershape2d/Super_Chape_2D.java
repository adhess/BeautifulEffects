/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package supershape2d;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.List;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

/**
 *
 * @author adhess
 */
public class Super_Chape_2D extends javax.swing.JFrame {

    private static double a = 1;
    private static double b = 1;
    private static double n1 = 0.3;
    private static double n2 = 0.3;
    private static double n3 = 0.3;
    private static double m = (double) 1 / 6;
    private static int w = 500;
    private static int h = 500;
    private static Graphics graphics;
    private static Color clair = new Color(195, 195, 195);
    private static Color foncer = new Color(35, 35, 35);
    private static ArrayList l;

    @Override

    public void paint(Graphics g) {
        g.setColor(foncer);
        int t = 50;
        g.fillRect(0, t, w, h - t);
        g.setColor(clair);
        Eval(g);
    }

    public static void Eval(Graphics g) {
        double x = 0;
        double y = 0;
        double xp = 0;
        double yp = 0;

        for (int phi = 0; phi <= 0; phi++) {

            double r;
            double t1, t2;

            t1 = Math.cos(Math.toRadians(m * phi / 4)) / a;
            t1 = Math.abs(t1);
            t1 = Math.pow(t1, n2);

            t2 = Math.sin(Math.toRadians(m * phi / 4)) / b;
            t2 = Math.abs(t2);
            t2 = Math.pow(t2, n3);

            r = Math.pow(t1 + t2, 1 / n1);//System.out.println(r);
            if (Math.abs(r) == 0) {
                xp = 0;
                yp = 0;
            } else {
                r = 1 / r;
                xp = r * Math.cos(Math.toRadians(phi));
                yp = r * Math.sin(Math.toRadians(phi));
            }

        }
        int zd = m > 2 ? 1 : 7;

        for (double phi = 0.1; phi <= zd * 360; phi += 0.1) {

            double r;
            double t1, t2;
            double a = 1, b = 1;

            t1 = Math.cos(Math.toRadians(m * phi / 4)) / a;
            t1 = Math.abs(t1);
            t1 = Math.pow(t1, n2);

            t2 = Math.sin(Math.toRadians(m * phi / 4)) / b;
            t2 = Math.abs(t2);
            t2 = Math.pow(t2, n3);

            r = Math.pow(t1 + t2, 1 / n1);//System.out.println(r);
            if (Math.abs(r) == 0) {
                x = 0;
                y = 0;
            } else {
                r = 1 / r;
                x = r * Math.cos(Math.toRadians(phi));
                y = r * Math.sin(Math.toRadians(phi));
            }
            int f = 3;
            //System.out.println((int) Math.round(xp * w / f + w / 2) + " " + (int) Math.round(yp * h / f + h / 2));

            g.drawLine((int) Math.round(xp * w / f + w / 2), 30 + (int) Math.round(yp * h / f + h / 2), (int) Math.round(x * w / f + w / 2), 30 + (int) Math.round(y * h / f + h / 2));
            xp = x;
            yp = y;
        }
    }

    /**
     * Creates new form Super_Chape_2D
     */
    public Super_Chape_2D() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSlider3 = new javax.swing.JSlider();
        jSlider4 = new javax.swing.JSlider();
        jSlider5 = new javax.swing.JSlider();
        jSlider6 = new javax.swing.JSlider();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("clic me");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSlider5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSlider6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jSlider4, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jSlider3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jSlider4, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(3, 3, 3)
                .addComponent(jSlider3, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 223, Short.MAX_VALUE)
                .addComponent(jSlider6, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSlider5, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int si = l.size();
        m = 0;
        n1 = 0;
        n2 = 0;
        n3 = 0;
        Iterator iterator = l.iterator();
        int iteration = 5;
        while (iterator.hasNext()) {
            System.out.println(si--);
            choix next = (choix) iterator.next();
            double mpas = (next.m - m) / iteration;
            double n1pas = (next.n1 - n1) / iteration;
            double n2pas = (next.n2 - n2) / iteration;
            double n3pas = (next.n3 - n3) / iteration;

            for (int i = 0; i < iteration - 1; i++) {
                m += mpas;
                n1 += n1pas;
                n2 += n2pas;
                n3 += n3pas;
                graphics.setColor(foncer);
                int t = 50;
                graphics.fillRect(0, t, w, h - t);
                graphics.setColor(clair);
                Eval(graphics);

                try {
                    TimeUnit.MILLISECONDS.sleep(120);
                } catch (InterruptedException ex) {
                    Logger.getLogger(Super_Chape_2D.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
            m += mpas;
            n1 += n1pas;
            n2 += n2pas;
            n3 += n3pas;
            graphics.setColor(foncer);
            int t = 50;
            graphics.fillRect(0, t, w, h - t);
            graphics.setColor(new Color(18, 119, 29));
            Eval(graphics);
            try {
                TimeUnit.MILLISECONDS.sleep(1200);
            } catch (InterruptedException ex) {
                Logger.getLogger(Super_Chape_2D.class.getName()).log(Level.SEVERE, null, ex);
            }
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        l = new ArrayList();
        
        choix d = new choix(1, 1, 1, 1);
        l.add(d);
        d = new choix(2, 1, 1, 1);
        l.add(d);
        d = new choix(3, 1, 1, 1);
        l.add(d);
        d = new choix(4, 1, 1, 1);
        l.add(d);
        d = new choix(5, 1, 1, 1);
        l.add(d);
        d = new choix(6, 1, 1, 1);
        l.add(d);
        
        
        d = new choix(2, 60, 55, 30);
        l.add(d);
        d = new choix(3, 60, 55, 30);
        l.add(d);
        d = new choix(4, 60, 55, 30);
        l.add(d);
        d = new choix(5, 60, 55, 30);
        l.add(d);
        d = new choix(6, 60, 55, 30);
        l.add(d);
        d = new choix(7 / 6, 0.3, 0.3, 0.3);
        l.add(d);
        d = new choix(13 / 6, 0.3, 0.3, 0.3);
        l.add(d);
        d = new choix(19 / 6, 0.3, 0.3, 0.3);
        l.add(d);
        d = new choix(25/ 6, 0.3, 0.3, 0.3);
        l.add(d);
        d = new choix(31/ 6, 0.3, 0.3, 0.3);
        l.add(d);
        d = new choix(37/ 6, 0.3, 0.3, 0.3);
        l.add(d);
        
      
        d = new choix(5, 0.5, 1.7, 1.7);
        l.add(d);
        d = new choix(5, 0.2, 1.7, 1.7);
        l.add(d);
        d = new choix(5, 0.1, 1.7, 1.7);
        l.add(d);
        d = new choix(5, 0.02, 1.7, 1.7);
        l.add(d);

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Super_Chape_2D.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Super_Chape_2D.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Super_Chape_2D.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Super_Chape_2D.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Super_Chape_2D frame = new Super_Chape_2D();
                frame.setSize(w, h + 40);
                frame.setResizable(false);
                frame.setVisible(true);
                frame.setTitle("_____________________Super Shape 2D _____________________");
                graphics = frame.getGraphics();

                jSlider4.addChangeListener(new ChangeListener() {

                    @Override
                    public void stateChanged(ChangeEvent ce) {
                        m = (double) (jSlider4.getValue()) / 50;
                        graphics.setColor(foncer);
                        int t = 50;
                        graphics.fillRect(0, t, w, h - t);
                        graphics.setColor(clair);
                        Eval(graphics);

                    }
                });
                jSlider3.addChangeListener(new ChangeListener() {

                    @Override
                    public void stateChanged(ChangeEvent ce) {
                        n1 = (double) (jSlider3.getValue()) / 50;
                        n2 = n1;
                        n3 = n2;
                        graphics.setColor(foncer);
                        int t = 50;
                        graphics.fillRect(0, t, w, h - t);
                        graphics.setColor(clair);
                        Eval(graphics);

                    }
                });
                jSlider5.addChangeListener(new ChangeListener() {

                    @Override
                    public void stateChanged(ChangeEvent ce) {
                        m = (double) (jSlider5.getValue()) / 3;
                        graphics.setColor(foncer);
                        int t = 50;
                        graphics.fillRect(0, t, w, h - t);
                        graphics.setColor(clair);
                        Eval(graphics);

                    }
                });
                jSlider6.addChangeListener(new ChangeListener() {

                    @Override
                    public void stateChanged(ChangeEvent ce) {
                        n1 = (double) (jSlider6.getValue()) / 3;
                        n2 = n1;
                        n3 = n2;
                        graphics.setColor(foncer);
                        int t = 50;
                        graphics.fillRect(0, t, w, h - t);
                        graphics.setColor(clair);
                        Eval(graphics);

                    }
                });
            }

        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JButton jButton1;
    private static javax.swing.JSlider jSlider3;
    private static javax.swing.JSlider jSlider4;
    private static javax.swing.JSlider jSlider5;
    private static javax.swing.JSlider jSlider6;
    // End of variables declaration//GEN-END:variables
}
